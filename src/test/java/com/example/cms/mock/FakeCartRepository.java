package com.example.cms.mock;


import com.example.cms.cart.domain.Cart;
import com.example.cms.cart.service.port.CartRepository;


import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import java.util.concurrent.atomic.AtomicLong;

public class FakeCartRepository implements CartRepository {

    private final AtomicLong autoGeneratedId =new AtomicLong(0);
    private final List<Cart> data = new ArrayList<>();

    @Override
    public Cart save(Cart cart) {
        if (cart.getId() == null || cart.getId() == 0){
            Cart save = Cart.builder()
                    .id(autoGeneratedId.incrementAndGet())
                    .member(cart.getMember())
                    .cartItems(cart.getCartItems())
                    .count(cart.getCount())
                    .totalPrice(cart.getTotalPrice())
                    .build();
            data.add(save);
            return save;
        } else {
            data.removeIf(test -> Objects.equals(test.getId(),cart.getId()));
            data.add(cart);
            return cart;
        }
    }


    @Override
    public Optional<Cart> findById(Long id) {
        return data.stream().filter(test -> test.getId().equals(id)).findAny();
    }
}
