package com.example.cms.mock;


import com.example.cms.cartitem.domain.CartItem;
import com.example.cms.cartitem.service.port.CartItemRepository;
import com.example.cms.order.domain.Order;
import com.example.cms.order.service.port.OrderRepository;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import java.util.concurrent.atomic.AtomicLong;

public class FakeOrderRepository implements OrderRepository {

    private final AtomicLong autoGeneratedId =new AtomicLong(0);
    private final List<Order> data = new ArrayList<>();

    @Override
    public Order save(Order order) {
        if (order.getId() == null || order.getId() == 0){
            Order save = Order.builder()
                    .id(autoGeneratedId.incrementAndGet())
                    .cart(order.getCart())
                    .ordersPrice(order.getOrdersPrice())
                    .member(order.getMember())
                    .payment(order.getPayment())
                    .build();
            data.add(save);
            return save;
        } else {
            data.removeIf(test -> Objects.equals(test.getId(),order.getId()));
            data.add(order);
            return order;
        }
    }

    @Override
    public boolean existsByOrdersId(String orderId) {
        return false;
    }

    @Override
    public Optional<Order> findByOrdersId(String orderId) {
        return Optional.empty();
    }


}
